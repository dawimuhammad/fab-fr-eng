{"version":3,"sources":["Components/Shared/textfields.js","Components/Navbar/FurnitureStyle/index.js","Components/Navbar/DeliveryTime/index.js","Components/Navbar/index.js","Components/Contents/Product/styles.js","Lib/index.js","Components/Contents/Product/index.js","Components/Contents/index.js","App.js","reportWebVitals.js","index.js"],"names":["GreenCheckbox","withStyles","root","color","props","Checkbox","FabelioRootTextField","fontSize","borderBottomColor","TextField","FabelioSelectField","theme","marginTop","spacing","input","borderRadius","position","backgroundColor","textAlign","padding","borderColor","InputBase","FurnitureStyleSelection","furniture_styles","onStylesChanges","useState","furnitureStyles","setFurnitureStyles","useEffect","className","Select","fullWidth","multiple","id","value","onChange","event","target","renderValue","selected","join","map","style","MenuItem","Grid","container","direction","justify","checked","indexOf","deliveryTimes","name","DeliveryTimeSelection","onDeliveryTimeChanges","React","filterDeliveryTimes","setFilterDeliveryTimes","time","timePreference","Navbar","onFilterKeyChanges","item","xs","label","type","Styles","furniture_style","length","searchProductByKey","searchFilterKey","products","filter","product","toLowerCase","includes","filterProductDeliveryTime","highestDays","Math","max","apply","parseInt","delivery_time","Product","price","description","priceInRupiah","toFixed","split","reverse","reduce","acc","num","i","sm","Contents","index","App","setProducts","setSearchFilterKey","filterStyles","setFilterStyles","productsFiltered","setProductFilter","fetchProducts","searchedProducts","filterProduct","forEach","find","filterPrd","push","filterProductStyle","a","fetch","fetchingResponse","json","response","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3ff9cf.chunk.js","sourcesContent":["import { TextField, InputBase } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport const GreenCheckbox = withStyles({\n  root: {\n    color: '#039588',\n    '&$checked': {\n      color: '#039588',\n    }\n  }\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport const FabelioRootTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: '#ffffff',\n    },\n    '& label': {\n      color: '#ffffff',\n      fontSize: 20\n    },\n    '& .MuiInput-underline': {\n      borderBottomColor: '#ffffff',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#ffffff',\n    },\n    '& .MuiInputBase-input': {\n      fontSize: 20,\n      color: '#ffffff'\n    }\n  }\n})(TextField);\n\nexport const FabelioSelectField = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#ffffff',\n    fontSize: 20,\n    textAlign: 'left',\n    padding: '10px',\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: 'ffffff'\n    }\n  }\n}))(InputBase);\n\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Select, MenuItem, InputLabel } from '@material-ui/core'\nimport { FabelioSelectField, GreenCheckbox } from '../../Shared/textfields';\nimport './index.css';\n\nconst FurnitureStyleSelection = ({ furniture_styles, onStylesChanges }) => {\n  const [furnitureStyles, setFurnitureStyles] = useState([]);\n\n  useEffect(() => {\n    onStylesChanges(furnitureStyles)\n  }, [furnitureStyles]);\n\n  const handleChange = (event) => {\n    setFurnitureStyles(event.target.value);\n  };\n\n  return (\n    <>\n      {/* <InputLabel htmlFor=\"fab-root-textfield-furnistyles\">Furniture Style</InputLabel> */}\n      <p className=\"placeholder\">Furniture Style</p>\n      <Select\n        fullWidth\n        multiple\n        input={<FabelioSelectField id=\"fab-root-textfield-furnistyles\" />}\n        value={furnitureStyles}\n        onChange={handleChange}\n        renderValue={(selected) => selected.join(\", \")}\n        className=\"fieldbox\"\n      >\n        {\n          furniture_styles.map((style) => {\n            return (\n              <MenuItem key={style} value={style}>\n                <Grid\n                  container\n                  key={style}\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  className=\"select-item\"\n                >\n                  <p>{style}</p>\n                  <GreenCheckbox checked={furnitureStyles.indexOf(style) > -1} />\n                </Grid>\n              </MenuItem>\n            )\n          })\n        }\n      </Select>\n    </>\n  )\n};\n\nexport default FurnitureStyleSelection;","import React, { useEffect } from 'react';\nimport { Grid, Select, MenuItem } from '@material-ui/core'\nimport { FabelioSelectField, GreenCheckbox } from '../../Shared/textfields';\nimport './index.css';\n\nconst deliveryTimes = [\n  { name: \"1 Week\", value: 7 },\n  { name: \"2 Weeks\", value: 14 },\n  { name: \"3 Weeks\", value: 21 },\n  { name: \"1 Month\", value: 30 },\n  { name: \"More than 1 Month\", value: 31 }\n]\n\nconst DeliveryTimeSelection = ({ onDeliveryTimeChanges }) => {\n  const [filterDeliveryTimes, setFilterDeliveryTimes] = React.useState([]);\n\n  useEffect(() => {\n    onDeliveryTimeChanges(filterDeliveryTimes);\n  }, [filterDeliveryTimes])\n\n  const handleChange = (event) => {\n    setFilterDeliveryTimes(event.target.value);\n  };\n\n  return (\n    <>\n      {/* <InputLabel htmlFor=\"fab-root-textfield-delivtime\">Delivery Time</InputLabel> */}\n      <p className=\"placeholder\">Delivery Time</p>\n      <Select\n        fullWidth\n        multiple\n        input={<FabelioSelectField />}\n        value={filterDeliveryTimes}\n        onChange={handleChange}\n        renderValue={(selected) => selected.map((time) => time.name).join(\", \")}\n        className=\"fieldbox\"\n      >\n        {\n          deliveryTimes.map((timePreference) => {\n            const { name } = timePreference;\n            return (\n              <MenuItem key={name} value={timePreference}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  className=\"select-item\"\n                >\n                  <p>{name}</p>\n                  <GreenCheckbox checked={filterDeliveryTimes.indexOf(timePreference) > -1} />\n                </Grid>\n              </MenuItem>\n            )\n          })\n        }\n      </Select>\n    </>\n  )\n\n};\n\nexport default DeliveryTimeSelection;","import { Grid } from '@material-ui/core';\nimport { FabelioRootTextField } from '../Shared/textfields';\nimport FurnitureStyleSelection from './FurnitureStyle';\nimport DeliveryTimeSelection from './DeliveryTime';\nimport './index.css';\n\nconst Navbar = (props) => {\n  const { \n    furniture_styles,\n    onFilterKeyChanges, \n    onStylesChanges, \n    onDeliveryTimeChanges } = props;\n\n  return (\n    <Grid \n      container \n      direction=\"row\" \n      justify=\"center\" \n      className=\"navbar-root\"\n    >\n      <Grid \n        item\n        container \n        xs={12}\n        spacing={3}\n        direction=\"row\" \n        justify=\"space-between\"\n      >\n        <Grid \n          item \n          xs={6}\n        >\n          <FabelioRootTextField \n            id=\"filled-search\" \n            className=\"fieldbox\" \n            label=\"Search Furniture\" \n            type=\"search\" \n            fullWidth\n            onChange={(event) => onFilterKeyChanges(event.target.value)}\n          />\n        </Grid>\n\n        <Grid \n          item \n          container \n          spacing={3}\n        >\n          <Grid \n            item \n            xs={6}\n          >\n             <FurnitureStyleSelection \n              furniture_styles={furniture_styles} \n              onStylesChanges={onStylesChanges}\n              \n            />\n          </Grid>\n\n          <Grid \n            item \n            xs={6}\n          >\n             <DeliveryTimeSelection\n              onDeliveryTimeChanges={onDeliveryTimeChanges}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default Navbar;","import React from 'react';\n\nconst Styles = ({ furniture_style }) => {\n  if (!furniture_style.length) {\n    return <></>;\n  }\n\n  return (\n    furniture_style.map((style) =>\n      <p key={style} className=\"styles\">{style}</p>\n    )\n  )\n};\n\nexport default Styles;","/**\n * Convert Number to String Currency in Rupiah (Rp)\n * @returns {string}\n */\nexport function formatNumberToRupiahCurrency(num) {\n  var p = num.toFixed(2).split(\".\");\n  return \"Rp \" + p[0].split(\"\").reverse().reduce(function (acc, num, i) {\n    return num === \"-\" ? acc : num + (i && !(i % 3) ? \".\" : \"\") + acc;\n  }, \"\");\n}\n\n\n/**\n * Filter Products by Given Keywords\n * @returns {array}\n */\nexport const searchProductByKey = (searchFilterKey = '', products) => {\n  return products.filter((product) => product.name.toLowerCase().includes(searchFilterKey.toLowerCase()));\n};\n\n/**\n * Filter Products by Given Sets of Furniture Styles\n * @returns {array}\n */\nexport const filterProductStyle = (filterStyles, products) => {\n  let filterProduct = [];\n\n  products.forEach((product) => {\n    const { name, furniture_style } = product;\n\n    furniture_style.forEach((style) => {\n      if (filterStyles.includes(style) && !filterProduct.find((filterPrd) => filterPrd.name === name )) {\n        filterProduct.push(product);\n      }\n    });\n  });\n\n  return filterProduct;\n}\n\n/**\n * Filter Products by Given Sets of Delivery Time Range\n * @returns {array}\n */\nexport const filterProductDeliveryTime = (filterDeliveryTimes, products) => {\n  let highestDays = Math.max.apply(Math, filterDeliveryTimes.map(({ value }) => parseInt(value)));\n  if (highestDays > 30) {\n    return products.filter(({ delivery_time }) => delivery_time >= highestDays);\n  } else if (highestDays <= 30) {\n    return products.filter(({ delivery_time }) => delivery_time <= highestDays);\n  } else {\n    return [];\n  }\n}","import React from 'react';\nimport { Grid } from '@material-ui/core'\nimport './index.css';\nimport Styles from './styles';\nimport { formatNumberToRupiahCurrency } from '../../../Lib'\n\nconst Product = ({ product }) => {\n  const { name, price, description, furniture_style, delivery_time } = product;\n  const priceInRupiah = price && formatNumberToRupiahCurrency(price)\n\n  return (\n    <Grid item xs={12} sm={6}>\n      <Grid container className=\"product-root\">\n\n      <Grid item container direction=\"row\" justify=\"space-between\">\n        <p className=\"title\">{ name }</p>\n        <p className=\"price\">{ priceInRupiah }</p>\n      </Grid>\n      \n      <Grid item xs={12}>\n        <p className=\"description\">{ description }</p>\n      </Grid>\n\n      <Grid item container direction=\"row\" justify=\"flex-start\">\n        <Styles furniture_style={furniture_style} />\n      </Grid>\n\n      <Grid item container direction=\"row\" justify=\"flex-end\">\n        <p className=\"delivery-days\">{ delivery_time } Hari Pengiriman</p>\n      </Grid>\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default Product;","import { Grid } from '@material-ui/core'\nimport Product from './Product';\nimport './index.css';\n\nconst Contents = ({ products }) => {\n  return (\n    <Grid \n      container \n      spacing={3}\n      direction=\"row\" \n      justify=\"flex-start\" \n      className=\"content-root\" \n    >\n      {\n        (products.length) ? (\n          products.map((product, index) => <Product key={index} product={product}/>)\n        ) : (<></>)\n      }\n    </Grid>\n  )\n};\n\nexport default Contents;","import React, { useState, useEffect } from 'react';\nimport Navbar from './Components/Navbar';\nimport Contents from './Components/Contents';\nimport { searchProductByKey, filterProductStyle, filterProductDeliveryTime } from './Lib';\nimport './App.css';\n\nconst fetchProductUrl = 'https://www.mocky.io/v2/5c9105cb330000112b649af8';\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [furniture_styles, setFurnitureStyles] = useState([]);\n  const [searchFilterKey, setSearchFilterKey] = useState('');\n  const [filterStyles, setFilterStyles] = useState([])\n  const [filterDeliveryTimes, setFilterDeliveryTimes] = useState([]);\n  const [productsFiltered, setProductFilter] = useState([]);\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  useEffect(() => {\n    setProductFilter(searchProductByKey(searchFilterKey, products));\n  }, [searchFilterKey]);\n  \n  useEffect(() => {\n    const searchedProducts = searchProductByKey(searchFilterKey, products);\n    \n    if (!filterStyles.length) {\n      setProductFilter(searchedProducts);\n    } else {\n      setProductFilter(filterProductStyle(filterStyles, searchedProducts));\n    }\n\n  }, [filterStyles]);\n\n  useEffect(() => {\n    if (productsFiltered.length) {\n      setProductFilter(filterProductDeliveryTime(filterDeliveryTimes, productsFiltered));\n    } else if (!filterDeliveryTimes.length) {\n      setProductFilter([]);\n    } else {\n      setProductFilter(filterProductDeliveryTime(filterDeliveryTimes, products));\n    }\n  }, [filterDeliveryTimes]);\n\n  const fetchProducts = async () => {\n    const fetchingResponse = await fetch(fetchProductUrl);\n    const response = await fetchingResponse.json();\n    const { products, furniture_styles } = response;\n\n    if (furniture_styles.length) {\n      setFurnitureStyles(furniture_styles);\n    }\n\n    if (products.length) {\n      setProducts(products);\n    }\n  };\n\n  return (\n    <div className=\"root\">\n      <Navbar \n        furniture_styles={furniture_styles}\n        onFilterKeyChanges={value => setSearchFilterKey(value)}\n        onStylesChanges={value => setFilterStyles(value)}\n        onDeliveryTimeChanges={value => setFilterDeliveryTimes(value)}\n      />\n      <Contents \n        products={(!productsFiltered.length) ? (searchFilterKey.length || filterStyles.length || filterDeliveryTimes.length) ? (productsFiltered) : (products) : (productsFiltered)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}